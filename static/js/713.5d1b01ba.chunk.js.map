{"version":3,"file":"static/js/713.5d1b01ba.chunk.js","mappings":"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","sources":["components/Header.js","pages/SignUp.js","reducersPage/action/action.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Divider, PageHeader, Typography, Tag, Avatar, Popover } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../style/style.css\";\r\nimport { useSelector } from \"react-redux\";\r\n// import LogIn from \"../pages/LogIn\";\r\nimport { actionReducer } from \"../reducersPage/action/action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst HeaderTitle = () => {\r\n  const dispatch = useDispatch();\r\n  // to get data from the store\r\n  const selector = useSelector((state) => state.reducers);\r\n  let headerText = Object.keys(selector).length > 0;\r\n  // console.log(selector)\r\n\r\n  //state to store date and time for greeting\r\n  const [storeDate, setStoreDate] = useState(\"\");\r\n  //for front\r\n  let { Title } = Typography;\r\n  let headnav = useNavigate();\r\n  let head2nav = useNavigate();\r\n\r\n  const header1 = () => {\r\n    headnav(\"/signup\");\r\n  };\r\n  const header2 = () => {\r\n    head2nav(\"/\");\r\n  };\r\n\r\n  const header3 = () => {\r\n    head2nav(\"/\");\r\n  };\r\n\r\n\r\n  // This is the function for greeting\r\n  useEffect(() => {\r\n    const date = new Date();\r\n    let hours = date.getHours();\r\n    let status =\r\n      hours < 12\r\n        ? \"Morning\"\r\n        : hours <= 18 && hours >= 12\r\n        ? \"Afternoon\"\r\n        : \"Good Night\";\r\n    setStoreDate(status);\r\n    // console.log(status);\r\n  }, []);\r\n\r\n  //  function for logout button\r\n  const logout = () => {\r\n    dispatch(actionReducer({}));\r\n    head2nav(\"/\");\r\n  };\r\n\r\n  const content =(\r\n    <div>\r\n       <Button type=\"danger\" onClick={logout} > \r\n          <strong>Logout</strong>\r\n        </Button>\r\n    </div>\r\n  )\r\n// for time only\r\n  var today = new Date();\r\nvar time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n\r\n// end time\r\n  return (\r\n    <>\r\n      {/* <Header> */}\r\n\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        // onBack={() => null}\r\n        title={\r\n          <Title level={4} style={{ color: \"white\", cursor: \"pointer\" }}>\r\n            {\" \"}\r\n            <strong onClick={header2}>\r\n              {\" \"}\r\n              <u>Missing Child Finder</u>{\" \"}\r\n            </strong>\r\n          </Title>\r\n        }\r\n        tags={\r\n          <div style={{fontSize:15, color:\"wheat\"}}> {time} </div>\r\n\r\n\r\n          //  Below code is for showing \"Greeting according to loggedin user name\"\r\n          // Object.keys(selector).length === 0 ? (\r\n          //   <div className=\"dateFormat\"> {new Date().toLocaleString()}</div>\r\n          // ) : (\r\n          //   <strong className=\"dateFormat\">\r\n          //     {\" \"}\r\n          //     {storeDate}{\" \"}\r\n          //     <div\r\n          //       className=\"dateFormat\"\r\n          //       style={{ fontSize: 14, fontFamily: \"cursive\" }}\r\n          //     >\r\n          //       {\" \"}\r\n          //       {selector.details.firstname} {selector.details.lastname}{\" \"}\r\n          //     </div>{\" \"}\r\n          //   </strong>\r\n          // )\r\n        }\r\n        extra={\r\n          Object.keys(selector).length === 0\r\n            ? [\r\n                <Button key=\"3\" type=\"primary\" onClick={header1}>\r\n                  Sign Up\r\n                </Button>,\r\n                <Button key=\"2\" onClick={header3}>\r\n                  Login\r\n                </Button>,\r\n              ]\r\n            : [  \r\n                <Popover content={content} >\r\n                  <Avatar src= \"https://joeschmoe.io/api/v1/random\"/>\r\n                    <strong className=\"username\"> {selector.details.firstname} {selector.details.lastname}  </strong>\r\n                </Popover>\r\n              \r\n              ]\r\n        }\r\n        //  style={{position:\"sticky\"}}\r\n      />\r\n      {/* </Header> */}\r\n      {/* <Divider /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderTitle;\r\n","import React from \"react\";\r\nimport { Card, Input, Space, Typography, Button, Form } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst SignUp = () => {\r\n  const { Title } = Typography;\r\n\r\n  //   state for loading when data is loading\r\n  const [loading, setLoading] = useState(false);\r\n  //   navigation for login button\r\n  let loginNa = useNavigate();\r\n\r\n  //   function to handle login button\r\n  const loginNav = () => {\r\n    loginNa(\"/\");\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    setLoading(true);\r\n    let signupData = await axios.post(\r\n      \"https://ymissing.herokuapp.com/api/auth/register\",\r\n      values\r\n    );\r\n    if (signupData.data.type === \"error\") {\r\n      Swal.fire(\"Error\", signupData.data.msg, \"error\");\r\n    } else {\r\n      Swal.fire(\"Success\", signupData.data.msg, \"success\");\r\n      loginNa(\"/\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header /> <br />\r\n      <Card\r\n        title={\r\n          <Title level={2} style={{ color: \"#007373\" }}>\r\n            {\" \"}\r\n            Sign Up\r\n          </Title>\r\n        }\r\n        className=\"card\"\r\n        bordered={true}\r\n        style={{ margin: \"auto\", height: 570 }}\r\n      >\r\n        <Form onFinish={onFinish}>\r\n          <Space direction=\"vertical\">\r\n            <Form.Item\r\n              name={\"email\"}\r\n              rules={[{ required: true, message: \"Email is required!\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Email Address\"\r\n                bordered={true}\r\n                allowClear={true}\r\n                size=\"large\"\r\n                style={{ padding: 5, borderRadius: 10, width: 300 }}\r\n              />\r\n            </Form.Item>\r\n            {/* first name field */}\r\n            <Form.Item\r\n              name={\"firstname\"}\r\n              rules={[{ required: true, message: \"First Name Empty!\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"First Name\"\r\n                bordered={true}\r\n                allowClear={true}\r\n                size=\"large\"\r\n                style={{ padding: 5, borderRadius: 10, width: 300 }}\r\n              />\r\n            </Form.Item>\r\n            {/* Last Name field */}\r\n            <Form.Item\r\n              name={\"lastname\"}\r\n              rules={[{ required: true, message: \"Lastname Empty!\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Last Name\"\r\n                bordered={true}\r\n                allowClear={true}\r\n                size=\"large\"\r\n                style={{ padding: 5, borderRadius: 10, width: 300 }}\r\n              />\r\n            </Form.Item>\r\n            {/* User Name Field */}\r\n            <Form.Item\r\n              name={\"username\"}\r\n              rules={[{ required: true, message: \"Username Empty!\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"User Name\"\r\n                bordered={true}\r\n                allowClear={true}\r\n                size=\"large\"\r\n                style={{ padding: 5, borderRadius: 10, width: 300 }}\r\n              />\r\n            </Form.Item>\r\n            {/* Password field */}\r\n            <Form.Item\r\n              name={\"password\"}\r\n              rules={[{ required: true, message: \"Password Empty!\" }]}\r\n            >\r\n              <Input.Password\r\n                placeholder=\"Password\"\r\n                bordered={true}\r\n                size=\"large\"\r\n                style={{ padding: 5, marginTop: 2, borderRadius: 10 }}\r\n              />\r\n            </Form.Item>\r\n            {/* Sign Up button */}\r\n            <Button\r\n              loading={loading}\r\n              htmlType=\"submit\"\r\n              type=\"primary\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            Already a user?{\" \"}\r\n            <Button type=\"link\" onClick={loginNav}>\r\n              {\" \"}\r\n              <strong>Login</strong>{\" \"}\r\n            </Button>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { USER_DATA } from \"../constrants/constrant\";\r\n\r\nexport const actionReducer = (data) => {\r\n  return {\r\n    type: USER_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n"],"names":["dispatch","useDispatch","selector","useSelector","state","reducers","Object","keys","length","useState","setStoreDate","Title","Typography","headnav","useNavigate","head2nav","useEffect","hours","Date","getHours","content","type","onClick","actionReducer","today","time","getMinutes","getSeconds","className","title","level","style","color","cursor","tags","fontSize","extra","src","details","firstname","lastname","loading","setLoading","loginNa","onFinish","values","axios","signupData","data","Swal","msg","bordered","margin","height","direction","name","rules","required","message","placeholder","allowClear","size","padding","borderRadius","width","marginTop","htmlType","USER_DATA","payload"],"sourceRoot":""}